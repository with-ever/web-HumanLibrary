<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="kr.withever.humanlibrary.repo.mapper.UserMapper">
    <resultMap id="userResultMap" type="User">
        <id property="userId" column="USER_ID"/>
        <result property="loginId" column="LOGIN_ID"/>
        <result property="name" column="NAME"/>
        <result property="email" column="EMAIL"/>
        <result property="password" column="PASSWORD"/>
        <result property="gender" column="GENDER"/>
        <result property="phoneNo" column="PHONE_NO"/>
        <result property="mPhoneNo" column="M_PHONE_NO"/>
        <result property="birth" column="BIRTH"/>
        <result property="zipCode" column="ZIP_CODE"/>
        <result property="address" column="ADDRESS"/>
        <result property="imageUrl" column="IMAGE_URL"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="updateTime" column="UPDATE_TIME"/>
    </resultMap>

    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="userId" keyColumn="USER_ID">
        INSERT INTO USERS (
            LOGIN_ID
            ,NAME
            ,EMAIL
            ,PASSWORD
            ,GENDER
            ,PHONE_NO
            ,M_PHONE_NO
            ,BIRTH
            ,ZIP_CODE
            ,ADDRESS
            ,IMAGE_URL
            ,CREATE_TIME
            ,UPDATE_TIME
        )
        VALUES (
            #{loginId}
            ,#{name}
            ,#{email}
            ,#{password}
            ,#{gender}
            ,#{phoneNo}
            ,#{mPhoneNo}
            ,#{birth}
            ,#{zipCode}
            ,#{address}
            ,#{imageUrl}
            ,#{createTime}
            ,#{updateTime}
        )
    </insert>


    <select id="selectUser" parameterType="Long" resultMap="userResultMap">
        SELECT
            USER_ID
            ,LOGIN_ID
            ,NAME
            ,EMAIL
            ,GENDER
            ,PHONE_NO
            ,M_PHONE_NO
            ,BIRTH
            ,ZIP_CODE
            ,ADDRESS
            ,IMAGE_URL
            ,CREATE_TIME
            ,UPDATE_TIME
        FROM USERS
        WHERE USER_ID = #{userId}
    </select>

    <update id="updateUser" parameterType="User">
        UPDATE USERS
        SET
            NAME = #{name}
            ,EMAIL = #{email}
            ,GENDER = #{gender}
            ,PHONE_NO = #{phoneNo}
            ,M_PHONE_NO = #{mPhoneNo}
            ,BIRTH = #{birth}
            ,ZIP_CODE = #{zipCode}
            ,ADDRESS = #{address}
            ,IMAGE_URL = #{imageUrl}
            ,UPDATE_TIME = #{updateTime}
        WHERE USER_ID = #{userId}
    </update>

    <delete id="deleteUser" parameterType="Long">
        DELETE
        FROM USERS
        WHERE USER_ID = #{userId}
    </delete>

    <select id="selectUserByLoginId" parameterType="String" resultMap="userResultMap">
        SELECT
            USER_ID
            ,LOGIN_ID
            ,NAME
            ,EMAIL
            ,PASSWORD
            ,GENDER
            ,PHONE_NO
            ,M_PHONE_NO
            ,BIRTH
            ,ZIP_CODE
            ,ADDRESS
            ,IMAGE_URL
            ,CREATE_TIME
            ,UPDATE_TIME
        FROM USERS
        WHERE LOGIN_ID = #{loginId}
    </select>

    <select id="selectUserByLoginIdWithoutPassword" parameterType="String" resultMap="userResultMap">
        SELECT
            USER_ID
            ,LOGIN_ID
            ,NAME
            ,EMAIL
            ,GENDER
            ,PHONE_NO
            ,M_PHONE_NO
            ,BIRTH
            ,ZIP_CODE
            ,ADDRESS
            ,IMAGE_URL
            ,CREATE_TIME
            ,UPDATE_TIME
        FROM USERS
        WHERE LOGIN_ID = #{loginId}
    </select>

    <select id="selectUsersBySearch" parameterType="UserSearch" resultMap="userResultMap">
        SELECT
            USER_ID
            ,LOGIN_ID
            ,NAME
            ,EMAIL
            ,GENDER
            ,PHONE_NO
            ,M_PHONE_NO
            ,BIRTH
            ,ZIP_CODE
            ,ADDRESS
            ,CREATE_TIME
            ,UPDATE_TIME
        FROM USERS
        WHERE 1 = 1
            <if test="name != null and name != ''">
                AND NAME LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="email != null and email != ''">
                AND EMAIL LIKE CONCAT('%', #{email}, '%')
            </if>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectUsersTotalCountBySearch" parameterType="UserSearch" resultType="int">
        SELECT
            COUNT(1)
        FROM USERS
        WHERE 1 = 1
        <if test="name != null and name != ''">
            AND NAME LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="email != null and email != ''">
            AND EMAIL LIKE CONCAT('%', #{email}, '%')
        </if>
    </select>

    <select id="selectUserByIdWithPassword" resultType="boolean">
        SELECT
          COUNT(1)
        FROM USERS
        WHERE USER_ID = #{userId} AND PASSWORD = #{password}
    </select>

    <update id="updateUserPassword">
        UPDATE USERS
        SET
          PASSWORD = #{password}
        WHERE USER_ID = #{userId}
    </update>

    <select id="selectPasswordByUserId" resultType="String">
        SELECT
          PASSWORD
        FROM USERS
        WHERE USER_ID = #{userId}
    </select>

</mapper>