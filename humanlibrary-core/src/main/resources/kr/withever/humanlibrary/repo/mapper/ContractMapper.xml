<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.withever.humanlibrary.repo.mapper.ContractMapper">
    <resultMap id="contractResultMap" type="Contract">
        <id property="id" column="ID"/>
        <result property="state" column="STATE"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="updateTime" column="UPDATE_TIME"/>
        <result property="applyMsg" column="APPLY_MSG" />
        <result property="rejectMsg" column="REJECT_MSG" />
        <association property="user" columnPrefix="U_" resultMap="userResultMap"/>
        <association property="humanbook" columnPrefix="HB_" resultMap="humanbookResultMap"/>
        <association property="contractTime" resultMap="contractTimeResultMap"/>
    </resultMap>

    <resultMap type="User" id="userResultMap">
        <id property="userId" column="USER_ID"/>
        <result property="loginId" column="LOGIN_ID"/>
        <result property="name" column="NAME"/>
        <result property="email" column="EMAIL"/>
        <result property="gender" column="GENDER"/>
        <result property="phoneNo" column="PHONE_NO"/>
        <result property="mPhoneNo" column="M_PHONE_NO"/>
        <result property="birth" column="BIRTH"/>
        <result property="zipCode" column="ZIP_CODE"/>
        <result property="address" column="ADDRESS"/>
        <result property="imageUrl" column="IMAGE_URL"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="updateTime" column="UPDATE_TIME"/>
    </resultMap>

    <resultMap type="Humanbook" id="humanbookResultMap" >
        <id property="id" column="ID"/>
        <result property="title" column="TITLE"/>
        <result property="mainCareer" column="MAIN_CAREER"/>
        <result property="state" column="STATE"/>
        <result property="serviceTime" column="SERVICE_TIME"/>
        <result property="imageUrl" column="IMAGE_URL"/>
        <result property="description" column="DESCRIPTION"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="updateTime" column="UPDATE_TIME"/>
        <association property="user" resultMap="userResultMap" columnPrefix="U_"/>
    </resultMap>

    <resultMap type="ContractTime" id="contractTimeResultMap" >
        <id		property="id"		column="CONTRACT_TIME_ID"/>
        <result property="date"     column="DATE"/>
        <result property="time"     column="TIME"/>
    </resultMap>

    <insert id="insertContract" parameterType="Contract" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
        INSERT INTO CONTRACTS (
            USER_ID
            ,HB_ID
            ,STATE
            ,CONTRACT_TIME_ID
            ,DATE
            ,TIME
            ,APPLY_MSG
            ,REJECT_MSG
            ,CREATE_TIME
            ,UPDATE_TIME
        )
        VALUES (
            #{user.userId}
            ,#{humanbook.id}
            ,#{state}
            ,#{contractTime.id}
            ,#{contractTime.date}
            ,#{contractTime.time}
            ,#{applyMsg}
            ,#{rejectMsg}
            ,#{createTime}
            ,#{updateTime}
        )
    </insert>


    <select id="selectContract" parameterType="Long" resultMap="contractResultMap">
        SELECT
            C.ID AS ID
            ,C.USER_ID AS U_USER_ID
            ,C.HB_ID AS HB_ID
            ,C.STATE AS STATE
            ,C.CONTRACT_TIME_ID AS CONTRACT_TIME_ID
            ,C.DATE AS DATE
            ,C.TIME AS TIME
            ,C.CREATE_TIME AS CREATE_TIME
            ,C.UPDATE_TIME AS UPDATE_TIME
            ,C.APPLY_MSG AS APPLY_MSG
            ,C.REJECT_MSG AS REJECT_MSG
        FROM CONTRACTS C
        WHERE ID = #{contractId}
    </select>

    <select id="selectContractsBySearch" parameterType="ContractSearch" resultMap="contractResultMap">
        SELECT
            C.ID AS ID
            ,C.USER_ID AS USER_ID
            ,C.HB_ID AS HB_ID
            ,C.STATE AS STATE
            ,C.CONTRACT_TIME_ID AS CONTRACT_TIME_ID
            ,C.DATE AS DATE
            ,C.TIME AS TIME
            ,C.CREATE_TIME AS CREATE_TIME
            ,C.UPDATE_TIME AS UPDATE_TIME
            ,C.APPLY_MSG AS APPLY_MSG
            ,C.REJECT_MSG AS REJECT_MSG
            ,U.USER_ID AS U_USER_ID
            ,U.LOGIN_ID AS U_LOGIN_ID
            ,U.NAME AS U_NAME
            ,U.EMAIL AS U_EMAIL
            ,U.GENDER AS U_GENDER
            ,U.PHONE_NO AS U_PHONE_NO
            ,U.M_PHONE_NO AS U_M_PHONE_NO
            ,U.BIRTH AS U_BIRTH
            ,U.ZIP_CODE AS U_ZIP_CODE
            ,U.ADDRESS AS U_ADDRESS
            ,U.IMAGE_URL AS U_IMAGE_URL
            ,U.CREATE_TIME AS U_CREATE_TIME
            ,U.UPDATE_TIME AS U_UPDATE_TIME
            ,HB.ID AS HB_ID
            ,HB.USER_ID AS HB_U_USER_ID
            ,HB.TITLE AS HB_TITLE
            ,HB.MAIN_CAREER AS HB_MAIN_CAREER
            ,HB.STATE AS HB_STATE
            ,HB.SERVICE_TIME AS HB_SERVICE_TIME
            ,HB.PARENT_CATEGORY AS HB_PARENT_CATEGORY
            ,HB.SUB_CATEGORY AS HB_SUB_CATEGORY
            ,HB.IMAGE_URL AS HB_IMAGE_URL
            ,HB.DESCRIPTION AS HB_DESCRIPTION
            ,HB.CREATE_TIME AS HB_CREATE_TIME
            ,HB.UPDATE_TIME AS HB_UPDATE_TIME
            ,HBU.USER_ID AS HB_U_USER_ID
            ,HBU.LOGIN_ID AS HB_U_LOGIN_ID
            ,HBU.NAME AS HB_U_NAME
            ,HBU.EMAIL AS HB_U_EMAIL
            ,HBU.GENDER AS HB_U_GENDER
            ,HBU.PHONE_NO AS HB_U_PHONE_NO
            ,HBU.M_PHONE_NO AS HB_U_M_PHONE_NO
            ,HBU.BIRTH AS HB_U_BIRTH
            ,HBU.ZIP_CODE AS HB_U_ZIP_CODE
            ,HBU.ADDRESS AS HB_U_ADDRESS
            ,HBU.IMAGE_URL AS HB_U_IMAGE_URL
            ,HBU.CREATE_TIME AS HB_U_CREATE_TIME
            ,HBU.UPDATE_TIME AS HB_U_UPDATE_TIME
        FROM CONTRACTS C
        INNER JOIN USERS U ON U.USER_ID = C.USER_ID
        INNER JOIN HUMANBOOK HB ON HB.ID = C.HB_ID
        INNER JOIN USERS HBU ON HB.USER_ID = HBU.USER_ID
        WHERE 1 = 1
        <if test="userId != null and userId != 0">
            AND C.USER_ID = #{userId}
        </if>
        <if test="hbId != null and hbId != 0">
            AND C.HB_ID = #{hbId}
        </if>
        <if test="state != null">
            AND C.STATE IN
            <foreach item="item" collection="state" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            AND C.DATE > #{startDate} AND #{endDate} > C.DATE AND C.STATE = 'ACCEPT'
        </if>
        <if test="orderBy != null and orderBy != ''">
            <choose>
                <when test="orderBy == 'DESC'">
                    ORDER BY C.UPDATE_TIME DESC
                </when>
                <when test="orderBy == 'ASC'">
                    ORDER BY C.UPDATE_TIME ASC
                </when>
            </choose>

        </if>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectContractsTotalCountBySearch" parameterType="ContractSearch" resultType="int">
        SELECT
          COUNT(1)
        FROM CONTRACTS C
        INNER JOIN USERS U ON U.USER_ID = C.USER_ID
        INNER JOIN HUMANBOOK HB ON HB.ID = C.HB_ID
        INNER JOIN USERS HBU ON HB.USER_ID = HBU.USER_ID
        WHERE 1 = 1
        <if test="userId != null and userId != 0">
            AND C.USER_ID = #{userId}
        </if>
        <if test="hbId != null and hbId != 0">
            AND C.HB_ID = #{hbId}
        </if>
        <if test="state != null">
            AND C.STATE IN
            <foreach item="item" collection="state" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            AND C.DATE > #{startDate} AND #{endDate} > C.DATE AND C.STATE = 'ACCEPT'
        </if>
    </select>

    <update id="updateContract" parameterType="Contract">
        UPDATE CONTRACTS
        SET
            STATE = #{state}
            ,CONTRACT_TIME_ID = #{contractTime.id}
            ,DATE = #{contractTime.date}
            ,TIME = #{contractTime.time}
            ,UPDATE_TIME = #{updateTime}
            <if test="rejectMsg != null">
            	,REJECT_MSG = #{rejectMsg}
            </if>
            <if test="applyMsg != null">
            	,APPLY_MSG = #{applyMsg}
            </if>
        WHERE ID = #{id}
    </update>

    <delete id="deleteContract" parameterType="Long">
        DELETE
        FROM CONTRACTS
        WHERE ID = #{contractId}
    </delete>

    <update id="updateContractState">
        UPDATE CONTRACTS
        SET
          STATE = #{state}
        WHERE ID = #{id}
    </update>
    
    <select id="selectAcceptedContractBetweenUserAndHumanbook" resultType="int">
    	SELECT
    		COUNT(*)
    	FROM 
    		CONTRACTS
    	WHERE
    		STATE = 'ACCEPT'
    	AND
    		USER_ID = #{userId}
    	AND
    		HB_ID = #{humanbookId}
    </select>

    <select id="selectContractsForNotification" parameterType="ContractSearch" resultMap="contractResultMap">
        (
            SELECT
                C.ID AS ID
                ,C.USER_ID AS USER_ID
                ,C.HB_ID AS HB_ID
                ,C.STATE AS STATE
                ,C.CONTRACT_TIME_ID AS CONTRACT_TIME_ID
                ,C.DATE AS DATE
                ,C.TIME AS TIME
                ,C.CREATE_TIME AS CREATE_TIME
                ,C.UPDATE_TIME AS UPDATE_TIME
                ,C.APPLY_MSG AS APPLY_MSG
                ,C.REJECT_MSG AS REJECT_MSG
                ,U.USER_ID AS U_USER_ID
                ,U.LOGIN_ID AS U_LOGIN_ID
                ,U.NAME AS U_NAME
                ,U.EMAIL AS U_EMAIL
                ,U.GENDER AS U_GENDER
                ,U.PHONE_NO AS U_PHONE_NO
                ,U.M_PHONE_NO AS U_M_PHONE_NO
                ,U.BIRTH AS U_BIRTH
                ,U.ZIP_CODE AS U_ZIP_CODE
                ,U.ADDRESS AS U_ADDRESS
                ,U.IMAGE_URL AS U_IMAGE_URL
                ,U.CREATE_TIME AS U_CREATE_TIME
                ,U.UPDATE_TIME AS U_UPDATE_TIME
                ,HB.ID AS HB_ID
                ,HB.USER_ID AS HB_U_USER_ID
                ,HB.TITLE AS HB_TITLE
                ,HB.MAIN_CAREER AS HB_MAIN_CAREER
                ,HB.STATE AS HB_STATE
                ,HB.SERVICE_TIME AS HB_SERVICE_TIME
                ,HB.PARENT_CATEGORY AS HB_PARENT_CATEGORY
                ,HB.SUB_CATEGORY AS HB_SUB_CATEGORY
                ,HB.IMAGE_URL AS HB_IMAGE_URL
                ,HB.DESCRIPTION AS HB_DESCRIPTION
                ,HB.CREATE_TIME AS HB_CREATE_TIME
                ,HB.UPDATE_TIME AS HB_UPDATE_TIME
                ,HBU.USER_ID AS HB_U_USER_ID
                ,HBU.LOGIN_ID AS HB_U_LOGIN_ID
                ,HBU.NAME AS HB_U_NAME
                ,HBU.EMAIL AS HB_U_EMAIL
                ,HBU.GENDER AS HB_U_GENDER
                ,HBU.PHONE_NO AS HB_U_PHONE_NO
                ,HBU.M_PHONE_NO AS HB_U_M_PHONE_NO
                ,HBU.BIRTH AS HB_U_BIRTH
                ,HBU.ZIP_CODE AS HB_U_ZIP_CODE
                ,HBU.ADDRESS AS HB_U_ADDRESS
                ,HBU.IMAGE_URL AS HB_U_IMAGE_URL
                ,HBU.CREATE_TIME AS HB_U_CREATE_TIME
                ,HBU.UPDATE_TIME AS HB_U_UPDATE_TIME
            FROM CONTRACTS C
            INNER JOIN USERS U ON U.USER_ID = C.USER_ID
            INNER JOIN HUMANBOOK HB ON HB.ID = C.HB_ID
            INNER JOIN USERS HBU ON HB.USER_ID = HBU.USER_ID
            WHERE
                1 = 1
                <if test="userId != null and userId != 0">
                    AND C.USER_ID = #{userId}
                </if>
                <if test="state != null">
                    AND C.STATE IN
                    <foreach item="item" collection="state" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                    AND C.DATE > #{startDate} AND #{endDate} > C.DATE
                </if>
        )
        UNION
        (
            SELECT
                C.ID AS ID
                ,C.USER_ID AS USER_ID
                ,C.HB_ID AS HB_ID
                ,C.STATE AS STATE
                ,C.CONTRACT_TIME_ID AS CONTRACT_TIME_ID
                ,C.DATE AS DATE
                ,C.TIME AS TIME
                ,C.CREATE_TIME AS CREATE_TIME
                ,C.UPDATE_TIME AS UPDATE_TIME
                ,C.APPLY_MSG AS APPLY_MSG
                ,C.REJECT_MSG AS REJECT_MSG
                ,U.USER_ID AS U_USER_ID
                ,U.LOGIN_ID AS U_LOGIN_ID
                ,U.NAME AS U_NAME
                ,U.EMAIL AS U_EMAIL
                ,U.GENDER AS U_GENDER
                ,U.PHONE_NO AS U_PHONE_NO
                ,U.M_PHONE_NO AS U_M_PHONE_NO
                ,U.BIRTH AS U_BIRTH
                ,U.ZIP_CODE AS U_ZIP_CODE
                ,U.ADDRESS AS U_ADDRESS
                ,U.IMAGE_URL AS U_IMAGE_URL
                ,U.CREATE_TIME AS U_CREATE_TIME
                ,U.UPDATE_TIME AS U_UPDATE_TIME
                ,HB.ID AS HB_ID
                ,HB.USER_ID AS HB_U_USER_ID
                ,HB.TITLE AS HB_TITLE
                ,HB.MAIN_CAREER AS HB_MAIN_CAREER
                ,HB.STATE AS HB_STATE
                ,HB.SERVICE_TIME AS HB_SERVICE_TIME
                ,HB.PARENT_CATEGORY AS HB_PARENT_CATEGORY
                ,HB.SUB_CATEGORY AS HB_SUB_CATEGORY
                ,HB.IMAGE_URL AS HB_IMAGE_URL
                ,HB.DESCRIPTION AS HB_DESCRIPTION
                ,HB.CREATE_TIME AS HB_CREATE_TIME
                ,HB.UPDATE_TIME AS HB_UPDATE_TIME
                ,HBU.USER_ID AS HB_U_USER_ID
                ,HBU.LOGIN_ID AS HB_U_LOGIN_ID
                ,HBU.NAME AS HB_U_NAME
                ,HBU.EMAIL AS HB_U_EMAIL
                ,HBU.GENDER AS HB_U_GENDER
                ,HBU.PHONE_NO AS HB_U_PHONE_NO
                ,HBU.M_PHONE_NO AS HB_U_M_PHONE_NO
                ,HBU.BIRTH AS HB_U_BIRTH
                ,HBU.ZIP_CODE AS HB_U_ZIP_CODE
                ,HBU.ADDRESS AS HB_U_ADDRESS
                ,HBU.IMAGE_URL AS HB_U_IMAGE_URL
                ,HBU.CREATE_TIME AS HB_U_CREATE_TIME
                ,HBU.UPDATE_TIME AS HB_U_UPDATE_TIME
            FROM CONTRACTS C
            INNER JOIN USERS U ON U.USER_ID = C.USER_ID
            INNER JOIN HUMANBOOK HB ON HB.ID = C.HB_ID
            INNER JOIN USERS HBU ON HB.USER_ID = HBU.USER_ID
            WHERE
                1 = 1
                <if test="userId != null and userId != 0">
                    AND HB.USER_ID = #{userId}
                </if>
                <if test="state != null">
                    AND C.STATE IN
                    <foreach item="item" collection="state" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                    AND C.DATE > #{startDate} AND #{endDate} > C.DATE
                </if>
        )
        <if test="orderBy != null and orderBy != ''">
            <choose>
                <when test="orderBy == 'DESC'">
                    ORDER BY UPDATE_TIME DESC
                </when>
                <when test="orderBy == 'ASC'">
                    ORDER BY UPDATE_TIME ASC
                </when>
            </choose>
        </if>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectContractsTotalCountForNotification" parameterType="ContractSearch" resultType="int">
        SELECT
          SUM(TOTAL)
        FROM
            (
                SELECT
                  COUNT(1) AS TOTAL
                FROM CONTRACTS C
                INNER JOIN USERS U ON U.USER_ID = C.USER_ID
                INNER JOIN HUMANBOOK HB ON HB.ID = C.HB_ID
                INNER JOIN USERS HBU ON HB.USER_ID = HBU.USER_ID
                WHERE
                    1 = 1
                    <if test="userId != null and userId != 0">
                        AND C.USER_ID = #{userId}
                    </if>
                    <if test="state != null">
                        AND C.STATE IN
                        <foreach item="item" collection="state" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        AND C.DATE > #{startDate} AND #{endDate} > C.DATE
                    </if>
                UNION
                SELECT
                  COUNT(1) AS TOTAL
                FROM CONTRACTS C
                INNER JOIN USERS U ON U.USER_ID = C.USER_ID
                INNER JOIN HUMANBOOK HB ON HB.ID = C.HB_ID
                INNER JOIN USERS HBU ON HB.USER_ID = HBU.USER_ID
                WHERE
                    1 = 1
                    <if test="userId != null and userId != 0">
                        AND HB.USER_ID = #{userId}
                    </if>
                    <if test="state != null">
                        AND C.STATE IN
                        <foreach item="item" collection="state" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        AND C.DATE > #{startDate} AND #{endDate} > C.DATE
                    </if>
            ) CONTRACTS;
    </select>

</mapper>