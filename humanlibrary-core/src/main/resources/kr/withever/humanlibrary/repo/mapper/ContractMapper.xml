<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.withever.humanlibrary.repo.mapper.ContractMapper">
    <resultMap id="contractResultMap" type="Contract">
        <id property="id" column="ID"/>
        <result property="state" column="STATE"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="updateTime" column="UPDATE_TIME"/>
        <association property="user" resultMap="userResultMap"/>
        <association property="humanbook" resultMap="humanbookResultMap"/>
        <association property="contractTime" resultMap="contractTimeResultMap"/>
    </resultMap>

    <resultMap type="User" id="userResultMap">
        <id		property="userId"		column="USER_ID"/>
    </resultMap>

    <resultMap type="Humanbook" id="humanbookResultMap" >
        <id		property="id"		column="HB_ID"/>
    </resultMap>

    <resultMap type="ContractTime" id="contractTimeResultMap" >
        <id		property="id"		column="CONTRACT_TIME_ID"/>
        <result property="date"     column="DATE"/>
        <result property="time"     column="TIME"/>
    </resultMap>

    <insert id="insertContract" parameterType="Contract" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
        INSERT INTO CONTRACTS (
        USER_ID
        ,HB_ID
        ,STATE
        ,CONTRACT_TIME_ID
        ,DATE
        ,TIME
        ,CREATE_TIME
        ,UPDATE_TIME
        )
        VALUES (
        #{user.userId}
        ,#{humanbook.id}
        ,#{state}
        ,#{contractTime.id}
        ,#{contractTime.date}
        ,#{contractTime.time}
        ,#{createTime}
        ,#{updateTime}
        )
    </insert>


    <select id="selectContract" parameterType="Long" resultMap="contractResultMap">
        SELECT
            ID
            ,USER_ID
            ,HB_ID
            ,STATE
            ,CONTRACT_TIME_ID
            ,DATE
            ,TIME
            ,CREATE_TIME
            ,UPDATE_TIME
        FROM CONTRACTS
        WHERE ID = #{contractId}
    </select>

    <select id="selectContractsBySearch" parameterType="ContractSearch" resultMap="contractResultMap">
        SELECT
            ID
            ,USER_ID
            ,HB_ID
            ,STATE
            ,CONTRACT_TIME_ID
            ,DATE
            ,TIME
            ,CREATE_TIME
            ,UPDATE_TIME
        FROM CONTRACTS
        WHERE 1 = 1
        <if test="userId != null and userId != 0">
            AND USER_ID = #{userId}
        </if>
        <if test="hbId != null and hbId != 0">
            AND HB_ID = #{hbId}
        </if>
        <if test="state != null">
            AND STATE IN
            <foreach item="item" collection="state" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            AND DATE > #{startDate} AND #{endDate} > DATE AND STATE = 'ACCEPT'
        </if>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectContractsTotalCountBySearch" parameterType="ContractSearch" resultType="int">
        SELECT
          COUNT(1)
        FROM CONTRACTS
        WHERE 1 = 1
        <if test="userId != null and userId != 0">
            AND USER_ID = #{userId}
        </if>
        <if test="hbId != null and hbId != 0">
            AND HB_ID = #{hbId}
        </if>
        <if test="state != null">
            AND STATE IN
            <foreach item="item" collection="state" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            AND DATE > #{startDate} AND #{endDate} > DATE AND STATE = 'ACCEPT'
        </if>
    </select>

    <update id="updateContract" parameterType="Contract">
        UPDATE CONTRACTS
        SET
            STATE = #{state}
            ,CONTRACT_TIME_ID = #{contractTime.id}
            ,DATE = #{contractTime.date}
            ,TIME = #{contractTime.time}
            ,UPDATE_TIME = #{updateTime}
        WHERE ID = #{id}
    </update>

    <delete id="deleteContract" parameterType="Long">
        DELETE
        FROM CONTRACTS
        WHERE ID = #{contractId}
    </delete>

    <update id="updateContractState">
        UPDATE CONTRACTS
        SET
          STATE = #{state}
        WHERE ID = #{id}
    </update>
    
    <select id="selectAcceptedContractBetweenUserAndHumanbook" resultType="int">
    	SELECT
    		COUNT(*)
    	FROM 
    		CONTRACTS
    	WHERE
    		STATE = 'ACCEPT'
    	AND
    		USER_ID = #{userId}
    	AND
    		HB_ID = #{humanbookId}
    </select>

</mapper>